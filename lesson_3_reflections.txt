When would you want to use a remote repository rather than keeping all your work local?
Open source and/or collaborative projects would require to be shared using a remote repository

--

Why might you want to always pull changes manually rather than having Git automatically 
stay up-to-date with your remote repository?

Similar to auto-commit, a periodic pull into the same branch that I am working on locally
could result in unexpected code modifications leading to errors/bugs/mis-functionality 

-- 

Describe the differences between forks, clones, and branches. When would you use one instead 
of another?

Forks are useful to 'clone' something within GitHub. Clones are required to sync b/w Github 
and local setup, while may also be required to clone within the local setup. Branching is 
used when you want to make any experimental or significant changes withing the repo, but 
do not want to start altering the master branch just yet.

--

What is the benefit of having a copy of the last known state of the remote stored locally?

It would help track how much ahead we have moved from the remote tip, since the last sync

-- 

How would you collaborate without using Git or GitHub? What would be easier, and what would 
be harder?

Would have to maintain a realease and a dev branch which will require to manually merge into
dev branch. Would be very hard to collaborate 

--



